<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.brh.channel.shiro.dao.SysUserDao">
	<resultMap id="BaseResultMap" type="com.brh.channel.shiro.entity.SysUserEntity">
		<id column="USER_ID" jdbcType="VARCHAR" property="userId" />
		<result column="USER_NAME" jdbcType="VARCHAR" property="username" />
		<result column="PASSWORD" jdbcType="VARCHAR" property="password" />
		<result column="EMAIL" jdbcType="VARCHAR" property="email" />
		<result column="MOBILE" jdbcType="VARCHAR" property="mobile" />
		<result column="STATUS" jdbcType="INTEGER" property="status" />
		<result column="CREATE_USER_ID" jdbcType="VARCHAR" property="createUserId" />
		<result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
		<result column="DEPT_ID" jdbcType="VARCHAR" property="deptId" />
		<result column="CH_USER_NAME" jdbcType="VARCHAR" property="chUsername" />
	</resultMap>
	<select id="queryObject" resultType="com.brh.channel.shiro.entity.SysUserEntity">
		select * from sys_user where user_id = #{value}
	</select>
	
	<select id="queryList" resultMap="BaseResultMap">
		select T.* from(select m.*,rownum rn from sys_user m
		<where> 1=1 
			<if test="createUserId != null">
				and create_user_id = #{createUserId} 
			</if>
			<if test="username != null and username.trim() != ''">
				and username like '%'||#{username}||'%' 
			</if>
		</where>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by user_id desc
			</otherwise>
		</choose>
	)T
	<if test="offset != null and limit != null">
			where rn between #{offset} and #{limit}
	</if>
	</select>
	
	<select id="queryTotal" resultType="int">
		select count(*) from sys_user
		<where>
			<if test="createUserId != null">
				and create_user_id = #{createUserId} 
			</if>
			<if test="username != null and username.trim() != ''">
				and username like '%'||#{username}||'%' 
			</if>
		</where>
	</select>
	
	<!-- 查询用户的所有权限 -->
	<select id="queryAllPerms" resultType="string">
		select m.perms from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id 
			LEFT JOIN sys_menu m on rm.menu_id = m.menu_id 
		where ur.user_id = #{userId}
	</select>
	
	<!-- 查询用户的所有菜单ID --> 
	<select id="queryAllMenuId" resultType="long">
		select distinct rm.menu_id from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id 
		where ur.user_id = #{userId}
	</select>
	
	<select id="queryByUserName" resultType="com.brh.channel.shiro.entity.SysUserEntity">
		select * from sys_user where username = #{username}
	</select>
	<select id="queryDeptNameByUserId" parameterType="long" resultType="string">
		select b.name as deptname
		  from sys_user a
		  join sys_dept b
		    on a.dept_id = b.dept_id
		 where user_id = #{userId}	
	</select>
	<select id="queryChUserNameByUserId" parameterType="integer" resultType="string">
		select a.ch_username
		  from sys_user a
		 where user_id = #{userId}	
	</select>
	
	<insert id="save" parameterType="com.brh.channel.shiro.entity.SysUserEntity">
	  <selectKey keyProperty="userId" order="BEFORE" resultType="Long">
			select SEQUENCE_ID.Nextval as ID from dual
	  </selectKey>
    	insert into SYS_USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="mobile != null">
        MOBILE,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="createUserId != null">
        CREATE_USER_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="chUsername != null">
        CH_USERNAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=DECIMAL},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=DECIMAL},
      </if>
      <if test="chUsername != null">
        #{chUsername,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
	<insert id="saveSelective" parameterType="com.brh.channel.shiro.entity.SysUserEntity">
		<selectKey keyProperty="userId" order="BEFORE" resultType="Long">
			select SEQUENCE_ID.Nextval as ID from dual
		</selectKey>
		insert into sys_user
		(
			user_id, 
			username, 
			password, 
			email, 
			mobile, 
			status, 
			create_user_id,
			create_time
		)
		values
		(
			#{userId}, 
			#{username}, 
			#{password}, 
			#{email}, 
			#{mobile}, 
			#{status}, 
			#{createUserId},
			#{createTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.brh.channel.shiro.entity.SysUserEntity">
		update sys_user 
		<set> 
			<if test="username != null">username = #{username}, </if>
			<if test="password != null">password = #{password}, </if>
			<if test="email != null">email = #{email}, </if>
			<if test="mobile != null">mobile = #{mobile}, </if>
			<if test="status != null">status = #{status}, </if>
			<if test="deptId != null">DEPT_ID = #{deptId},</if>
      		<if test="chUsername != null">CH_USERNAME = #{chUsername},</if>
		</set>
		where user_id = #{userId} 
		<if test="createUserId != null">
			and create_user_id = #{createUserId} 
		</if>
	</update>
	
	<update id="updatePassword" parameterType="map">
		update sys_user set password = #{newPassword} 
			where user_id = #{userId} and password = #{password}
	</update>
	
	<delete id="deleteBatch">
		delete from sys_user where user_id in 
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
		delete from sys_user_role where user_id in 
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>
	<delete id="deleteBatchUser">
		delete from sys_user where user_id in 
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>
	<delete id="deleteBatchUserRole">
		delete from sys_user_role where user_id in 
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>

</mapper>